MAIN_MENU = self.menuBar()
        MAIN_MENU_LIST = ["File","Settings","Help"]
        ACTIONS_LIST = [["Save","Open","Drag Drop","Quit"],["Text Size Up","Text Size Down","Light Dark"],["Search"]]
        for y in range(len(MAIN_MENU_LIST)):
            print("\n", MAIN_MENU_LIST[y])
            MAIN_MENU_LIST[y] = MAIN_MENU.addMenu(MAIN_MENU_LIST[y])
            for z in ACTIONS_LIST[y]:
                z = z.replace(" ","_")
                name = z
                print(z)
                z = QAction(name.replace("_"," "),self)
                temp = "MainWindow."+name+"()"
                print(temp)
                #eval(temp)
                z.triggered.connect(lambda: exec(temp))
                MAIN_MENU_LIST[y].addAction(z)


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
def slider(self,name):
            # find formal way
            exec("self."+name+" = QSlider(Qt.Vertical)")
            exec("self."+name+".setMaximum(50)")
            exec("self."+name+".setValue(0)")
            exec("self."+name+".setMinimum(0)")
            exec("self."+name+".valueChanged.connect(self._update_graph)")
            exec("self."+name+".setTickPosition(QSlider.TicksBelow)")
            SliderLayout.addWidget(self.compost)
            SliderLayout.addWidget(QLabel(name))

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
        # global COMPOST_SLIDER
        # COMPOST_SLIDER = QSlider(Qt.Vertical)
        # # Int resrictions
        # # use %%
        # COMPOST_SLIDER.setMaximum(50)
        # COMPOST_SLIDER.setValue(0)
        # COMPOST_SLIDER.setMinimum(0)
        # COMPOST_SLIDER.valueChanged.connect(self._update_graph)
        # COMPOST_SLIDER.setTickPosition(QSlider.TicksBelow)
        # SliderLayout.addWidget(COMPOST_SLIDER)

        # SliderLayout.addWidget(QLabel("Compost"))
    